{"version":3,"sources":["webpack://trekhleb.github.io/./node_modules/@react-icons/all-files/gi/GiArcheryTarget.js","webpack://trekhleb.github.io/./src/components/shared/CardTitle.tsx","webpack://trekhleb.github.io/./src/components/shared/CardActions.tsx","webpack://trekhleb.github.io/./src/components/elements/ProjectPreview.tsx","webpack://trekhleb.github.io/./src/components/elements/ProjectsList.tsx","webpack://trekhleb.github.io/./src/components/elements/ProjectFilters.tsx","webpack://trekhleb.github.io/./src/components/screens/ProjectsScreen.tsx","webpack://trekhleb.github.io/./src/pages/projects.tsx"],"names":["GenIcon","module","exports","props","children","link","headerElement","level","hLevel","linkElement","className","Row","project","projectTags","tags","Tags","numToShow","projectDates","DateRange","startDate","endDate","projectStars","getGitHubProjectStars","projectStarsLink","url","srcURL","caption","stars","Stars","projectSummaryLines","summary","map","summaryLine","index","key","projectSummary","defaultProjectUrl","archived","undefined","demoURL","demoLink","ButtonLink","startEnhancer","IoPlay","sourceCodeLink","FaGithub","projectCover","cover","FluidImage","image","archivedStamp","Archived","actions","extraLinksList","links","length","extraLink","linkIndex","HyperLink","BiInfoCircle","size","achievementsLink","achievements","getProjectAchievementsLink","id","GiArcheryTarget","Badge","externalLinks","Card","CardMedia","CardContent","CardTitle","name","projectsElements","projects","Cards","sortByStartDateDesc","sorters","title","hidden","onSort","sortBy","sorterOptions","Object","keys","filter","sorterKey","sorter","value","onChange","event","selectedKey","target","defaultValue","projectSorters","sort","a","b","aStars","bStars","useState","setSortBy","projectMapToArray","filteredProjects","setFilteredProjects","useEffect","sortedProjects","projectsNum","PageLayout","SEO","description","PageHeader","getTotalGetHubProjectStars"],"mappings":"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","file":"component---src-pages-projects-tsx-6569f0f14bbb9960194f.js","sourcesContent":["// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon;\n\nmodule.exports.GiArcheryTarget = function GiArcheryTarget(props) {\n  return GenIcon({\n    \"tag\": \"svg\",\n    \"attr\": {\n      \"viewBox\": \"0 0 512 512\"\n    },\n    \"child\": [{\n      \"tag\": \"path\",\n      \"attr\": {\n        \"d\": \"M226.063 24.22l-9.782 32.624c12.992-2.652 26.423-4.032 40.19-4.032 10.475 0 20.766.82 30.81 2.376l-9.405-30.97h-51.813zm30.406 48.843c-99.627 0-180.19 80.53-180.19 180.156 0 99.624 80.563 180.155 180.19 180.155 99.624 0 180.155-80.53 180.155-180.156 0-99.627-80.53-180.157-180.156-180.157zm0 41.687c76.482 0 138.467 61.985 138.467 138.47 0 76.482-61.985 138.5-138.468 138.5-76.485 0-138.5-62.018-138.5-138.5 0-76.485 62.015-138.47 138.5-138.47zm-.033 38.938c-54.96 0-99.53 44.54-99.53 99.5s44.57 99.5 99.53 99.5 99.5-44.54 99.5-99.5-44.54-99.5-99.5-99.5zm.032 39.687c33.052 0 59.842 26.79 59.842 59.844 0 33.052-26.79 59.843-59.843 59.843-33.055 0-59.845-26.79-59.845-59.844 0-33.055 26.79-59.845 59.844-59.845zm0 30.906c-15.993 0-28.97 12.947-28.97 28.94 0 15.99 12.977 28.968 28.97 28.968 15.99 0 28.936-12.977 28.936-28.97 0-15.99-12.945-28.937-28.937-28.937zM114.905 395l-27.844 92.875h46.876l20.28-62.313c-14.35-8.54-27.56-18.833-39.312-30.562zm277.188 5.688c-11.982 11.026-25.324 20.595-39.72 28.468l19.25 58.72h46.907l-26.436-87.188zm-165.03 50.78v36.407h52.092v-35.53c-7.45.84-15.015 1.28-22.687 1.28-9.99 0-19.81-.74-29.408-2.156z\"\n      }\n    }]\n  })(props);\n};","import React from 'react';\nimport H, { hLevel } from './H';\nimport { Link } from '../../types/Link';\nimport HyperLink from './HyperLink';\n\ntype CardTitleProps = {\n  children: React.ReactNode,\n  link?: Link,\n};\n\nconst CardTitle = (props: CardTitleProps): React.ReactElement | null => {\n  const { children, link } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const headerElement = (\n    <H level={hLevel.h3}>\n      {children}\n    </H>\n  );\n\n  const linkElement = link ? (\n    <HyperLink link={link}>\n      {headerElement}\n    </HyperLink>\n  ) : null;\n\n  return (\n    <div className=\"mb-3\">\n      {linkElement || headerElement}\n    </div>\n  );\n};\n\nexport default CardTitle;\n","import React from 'react';\nimport Row from './Row';\n\ntype CardActionsProps = {\n  children: React.ReactNode,\n  className?: string,\n};\n\nconst CardActions = (props: CardActionsProps): React.ReactElement | null => {\n  const { children, className = 'px-6 pb-6' } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      <Row>\n        {children}\n      </Row>\n    </div>\n  );\n};\n\nexport default CardActions;\n","import React from 'react';\nimport { IoPlay } from '@react-icons/all-files/io5/IoPlay';\nimport { FaGithub } from '@react-icons/all-files/fa/FaGithub';\nimport { BiInfoCircle } from '@react-icons/all-files/bi/BiInfoCircle';\nimport { GiArcheryTarget } from '@react-icons/all-files/gi/GiArcheryTarget';\n\nimport { Project as ProjectType } from '../../types/Project';\nimport DateRange from '../shared/DateRange';\nimport Card from '../shared/Card';\nimport CardContent from '../shared/CardContent';\nimport CardMedia from '../shared/CardMedia';\nimport Tags from '../shared/Tags';\nimport FluidImage from '../shared/FluidImage';\nimport CardTitle from '../shared/CardTitle';\nimport CardActions from '../shared/CardActions';\nimport ButtonLink from '../shared/ButtonLink';\nimport Archived from '../shared/Archived';\nimport Stars from '../shared/Stars';\nimport Row from '../shared/Row';\nimport { getGitHubProjectStars, getProjectAchievementsLink } from '../../utils/project';\nimport { Link } from '../../types/Link';\nimport HyperLink from '../shared/HyperLink';\nimport Badge from '../shared/Badge';\n\ntype ProjectPreviewProps = {\n  project: ProjectType | null,\n};\n\nconst tagsPerProject = 3;\n\nconst ProjectPreview = (props: ProjectPreviewProps): React.ReactElement | null => {\n  const { project } = props;\n\n  if (!project) {\n    return null;\n  }\n\n  const projectTags = project?.tags ? (\n    <div>\n      <Tags tags={project.tags} numToShow={tagsPerProject} />\n    </div>\n  ) : null;\n\n  const projectDates = (\n    <DateRange\n      startDate={project.startDate}\n      endDate={project.endDate}\n      className=\"text-xs text-gray-500\"\n    />\n  );\n\n  const projectStars = getGitHubProjectStars(project);\n  const projectStarsLink: Link = {\n    url: project?.srcURL?.url,\n    caption: 'Stars on GitHub',\n  };\n  const stars = typeof projectStars === 'number' ? (\n    <Stars\n      stars={projectStars}\n      link={projectStarsLink}\n      className=\"text-xs text-gray-500 font-light\"\n    />\n  ) : null;\n\n  /* eslint-disable react/no-array-index-key */\n  const projectSummaryLines = project.summary ? project.summary.map(\n    (summaryLine: string | null, index: number) => (\n      <p key={index}>\n        {summaryLine}\n      </p>\n    ),\n  ) : null;\n\n  const projectSummary = projectSummaryLines ? (\n    <div className=\"mb-3 font-light\">\n      {projectSummaryLines}\n    </div>\n  ) : null;\n\n  const defaultProjectUrl = project.archived ? undefined : project.demoURL || project.srcURL;\n\n  const demoLink = project.demoURL && !project.archived ? (\n    <ButtonLink\n      link={project.demoURL}\n      startEnhancer={<IoPlay />}\n      className=\"mr-4\"\n    >\n      Demo\n    </ButtonLink>\n  ) : null;\n\n  const sourceCodeLink = project.srcURL && !project.archived ? (\n    <ButtonLink\n      link={project.srcURL}\n      startEnhancer={<FaGithub />}\n    >\n      Source Code\n    </ButtonLink>\n  ) : null;\n\n  const projectCover = project.cover ? (\n    <FluidImage image={project.cover} />\n  ) : null;\n\n  const archivedStamp = project?.archived ? (\n    <CardActions>\n      <Archived />\n    </CardActions>\n  ) : null;\n\n  const actions = demoLink || sourceCodeLink ? (\n    <CardActions>\n      {demoLink}\n      {sourceCodeLink}\n    </CardActions>\n  ) : null;\n\n  const extraLinksList = project?.links && project?.links.length\n    ? project?.links.map((extraLink: Link, linkIndex) => {\n      return (\n        <li key={linkIndex}>\n          <HyperLink\n            link={extraLink}\n            className=\"text-sm underline\"\n            startEnhancer={(<BiInfoCircle size={14} />)}\n          >\n            {extraLink?.caption || 'Read more'}\n          </HyperLink>\n        </li>\n      );\n    })\n    : null;\n\n  const achievementsLink = project?.achievements && project.achievements.length ? (\n    <Row className=\"mt-3\">\n      <HyperLink\n        link={getProjectAchievementsLink(project.id)}\n        className=\"text-sm underline\"\n        startEnhancer={(<GiArcheryTarget size={14} />)}\n      >\n        Achievements\n      </HyperLink>\n      <Badge className=\"ml-2\">\n        <small>{project.achievements.length}</small>\n      </Badge>\n    </Row>\n  ) : null;\n\n  const externalLinks = extraLinksList ? (\n    <ul className=\"mt-3\">\n      {extraLinksList}\n    </ul>\n  ) : null;\n\n  return (\n    <Card>\n      <CardMedia link={defaultProjectUrl}>\n        {projectCover}\n      </CardMedia>\n      <CardContent>\n        <CardTitle link={defaultProjectUrl}>\n          {project.name}\n        </CardTitle>\n        <Row className=\"mb-3 justify-between\">\n          <div>\n            {projectDates}\n          </div>\n          <div>\n            {stars}\n          </div>\n        </Row>\n        {projectSummary}\n        {projectTags}\n        {achievementsLink}\n        {externalLinks}\n      </CardContent>\n      {actions}\n      {archivedStamp}\n    </Card>\n  );\n};\n\nexport default ProjectPreview;\n","import React from 'react';\n\nimport { Project } from '../../types/Project';\nimport ProjectPreview from './ProjectPreview';\nimport Cards from '../shared/Cards';\n\ntype ProjectsListProps = {\n  projects: Project[],\n};\n\nconst ProjectsList = (props: ProjectsListProps): React.ReactElement => {\n  const { projects } = props;\n\n  const projectsElements = projects.map((project) => {\n    return <ProjectPreview project={project} key={project.id} />;\n  });\n\n  return (\n    <Cards>\n      {projectsElements}\n    </Cards>\n  );\n};\n\nexport default ProjectsList;\n","import React, { ChangeEvent } from 'react';\nimport Row from '../shared/Row';\n\nexport type SortOption = 'startDateAsc' | 'startDateDesc' | 'starsDesc';\n\nexport const sortByStartDateAsc: SortOption = 'startDateAsc';\nexport const sortByStartDateDesc: SortOption = 'startDateDesc';\nexport const sortByStarsDesc: SortOption = 'starsDesc';\n\ntype Sorter = {\n  title: string,\n  hidden?: boolean,\n}\n\ntype Sorters = Record<SortOption, Sorter>;\n\nconst sorters: Sorters = {\n  [sortByStartDateDesc]: {\n    title: '➘ start date',\n  },\n  [sortByStartDateAsc]: {\n    title: '➚ start date',\n    hidden: true,\n  },\n  [sortByStarsDesc]: {\n    title: '➘ stars',\n  },\n};\n\ntype ProjectFiltersProps = {\n  sortBy: SortOption,\n  onSort: (sortKey: SortOption) => void,\n};\n\nconst ProjectFilters = (props: ProjectFiltersProps): React.ReactElement => {\n  const { onSort, sortBy } = props;\n\n  const sorterOptions = Object.keys(sorters)\n    .filter((sorterKey: string) => {\n      const sorter = sorters[sorterKey as SortOption];\n      return !sorter?.hidden;\n    })\n    .map((sorterKey: string) => {\n      const sorter = sorters[sorterKey as SortOption];\n      return (\n        <option key={sorterKey} value={sorterKey}>\n          {sorter.title}\n        </option>\n      );\n    });\n\n  const onSortChange = (event: ChangeEvent<HTMLSelectElement>): void => {\n    const selectedKey: SortOption = event.target.value as SortOption;\n    onSort(selectedKey);\n  };\n\n  return (\n    <div>\n      <Row>\n        <div className=\"text-sm text-gray-500 mr-1\">\n          Sort by:\n        </div>\n        <div>\n          <select onChange={onSortChange} defaultValue={sortBy} className=\"text-sm\">\n            {sorterOptions}\n          </select>\n        </div>\n      </Row>\n    </div>\n  );\n};\n\nexport default ProjectFilters;\n","import React, { useEffect, useState } from 'react';\n\nimport { Project as ProjectType, Projects as ProjectsType } from '../../types/Project';\nimport ProjectsList from '../elements/ProjectsList';\nimport PageLayout from '../layouts/PageLayout';\nimport PageHeader from '../shared/PageHeader';\nimport Badge from '../shared/Badge';\nimport Row from '../shared/Row';\nimport SEO from '../shared/SEO';\nimport ProjectFilters, {\n  sortByStarsDesc, sortByStartDateAsc,\n  sortByStartDateDesc,\n  SortOption,\n} from '../elements/ProjectFilters';\nimport { getGitHubProjectStars, getTotalGetHubProjectStars, projectMapToArray } from '../../utils/project';\nimport Stars from '../shared/Stars';\n\ntype ProjectsScreenProps = {\n  projects: ProjectsType,\n};\n\ntype ProjectSorter = {\n  // Returns -1, 0, +1.\n  sort: (a: ProjectType, b: ProjectType) => number,\n};\n\ntype ProjectSorters = Record<SortOption, ProjectSorter>;\n\n// @ts-ignore\nconst projectSorters: ProjectSorters = {\n  [sortByStartDateDesc]: {\n    sort: (a: ProjectType, b: ProjectType): number => {\n      if (!a?.startDate || !b.startDate || a.startDate === b.startDate) {\n        return 0;\n      }\n      return a.startDate > b.startDate ? -1 : 1;\n    },\n  },\n  [sortByStartDateAsc]: {\n    sort: (a: ProjectType, b: ProjectType): number => {\n      if (!a?.startDate || !b.startDate || a.startDate === b.startDate) {\n        return 0;\n      }\n      return a.startDate < b.startDate ? -1 : 1;\n    },\n  },\n  [sortByStarsDesc]: {\n    sort: (a: ProjectType, b: ProjectType): number => {\n      const aStars = getGitHubProjectStars(a) || 0;\n      const bStars = getGitHubProjectStars(b) || 0;\n      if (aStars === bStars) {\n        return 0;\n      }\n      return aStars > bStars ? -1 : 1;\n    },\n  },\n};\n\nconst ProjectsScreen = (props: ProjectsScreenProps): React.ReactElement => {\n  const { projects } = props;\n\n  const [sortBy, setSortBy] = useState<SortOption>(sortByStartDateDesc);\n  const [filteredProjects, setFilteredProjects] = useState<ProjectType[]>(\n    projectMapToArray(projects),\n  );\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    const sortedProjects = [...filteredProjects].sort(projectSorters[sortBy].sort);\n    setFilteredProjects(sortedProjects);\n  }, [sortBy]);\n\n  const projectsNum = filteredProjects.length;\n\n  return (\n    <PageLayout>\n      <SEO\n        title=\"Projects\"\n        description=\"Projects and experiments that help people learn\"\n      />\n      <Row>\n        <PageHeader>Projects</PageHeader>\n        <Badge className=\"ml-3 self-start\">{projectsNum}</Badge>\n      </Row>\n      <Row className=\"mb-6 justify-between\">\n        <ProjectFilters onSort={setSortBy} sortBy={sortBy} />\n        <Row className=\"ml-3\">\n          <div className=\"text-sm text-gray-500 mr-1\">\n            Total stars:\n          </div>\n          <Stars stars={getTotalGetHubProjectStars(projects)} />\n        </Row>\n      </Row>\n      <ProjectsList projects={filteredProjects} />\n    </PageLayout>\n  );\n};\n\nexport default ProjectsScreen;\n","import React from 'react';\n\nimport ProjectsScreen from '../components/screens/ProjectsScreen';\nimport { projects } from '../data/projects';\n\nconst Projects = (): React.ReactElement => {\n  return (\n    <ProjectsScreen projects={projects} />\n  );\n};\n\nexport default Projects;\n"],"sourceRoot":""}