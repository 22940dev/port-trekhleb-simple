{"version":3,"sources":["webpack:///./src/components/shared/CardMedia.tsx","webpack:///./src/components/elements/PostPreview.tsx","webpack:///./src/components/elements/PostsList.tsx","webpack:///./src/components/screens/BlogScreen.tsx","webpack:///./src/pages/blog.tsx","webpack:///./src/components/shared/Cards.tsx","webpack:///./src/components/shared/CardTitle.tsx","webpack:///./src/components/shared/Card.tsx","webpack:///./node_modules/@react-icons/all-files/fi/FiCalendar.js","webpack:///./node_modules/@react-icons/all-files/fi/FiClock.js","webpack:///./src/constants/posts.ts","webpack:///./src/components/shared/CardContent.tsx","webpack:///./src/components/shared/PageHeader.tsx"],"names":["cardMediaModeRow","CardMedia","props","children","className","mode","link","commonClasses","url","classes","wrappedChildren","formatted","PostPreview","post","postLink","fields","slug","postCover","frontmatter","cover","childImageSharp","fluid","FluidImage","fluidImage","postSummary","summary","dateElement","date","Row","FiCalendar","timeToRead","FiClock","Math","floor","timeToReadMultiplier","Card","cardModeRow","CardContent","cardContentModeRow","CardTitle","title","PostsList","postsElements","posts","allMarkdownRemark","nodes","map","node","key","id","Cards","cardModeList","BlogScreen","PageLayout","ScreenTitle","PageHeader","Blog","data","headerElement","level","hLevel","h3","linkElement","commonCardStyles","GenIcon","module","exports","style","flex","h1"],"mappings":"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","file":"component---src-pages-blog-tsx-e4bd00e3b01e33102577.js","sourcesContent":["import React from 'react';\nimport { Link } from '../../types/Link';\nimport HyperLink from './HyperLink';\n\ntype CardMediaMode = 'row' | 'column';\n\nexport const cardMediaModeRow: CardMediaMode = 'row';\nexport const cardMediaModeColumn: CardMediaMode = 'column';\n\ntype CardMediaProps = {\n  children: React.ReactNode,\n  className?: string,\n  mode?: CardMediaMode,\n  link?: Link,\n};\n\nconst CardMedia = (props: CardMediaProps): React.ReactElement | null => {\n  const {\n    children,\n    className = '',\n    mode = cardMediaModeColumn,\n    link,\n  } = props;\n\n  const linkClasses = link && link.url\n    ? 'cursor-pointer'\n    : '';\n\n  const commonClasses = `transition duration-200 ease-in-out transform hover:-translate-y-1 hover:scale-105 h-48 bg-cover bg-gray-200 overflow-hidden block ${className} ${linkClasses}`;\n\n  const classes = mode === cardMediaModeRow\n    ? `${commonClasses} sm:h-full sm:w-2/5 lg:w-1/4`\n    : `${commonClasses} mb-2`;\n\n  const wrappedChildren = link && link.url ? (\n    <HyperLink link={link} formatted={false}>\n      {children}\n    </HyperLink>\n  ) : children;\n\n  return (\n    <div className={classes}>\n      {wrappedChildren}\n    </div>\n  );\n};\n\nexport default CardMedia;\n","import React from 'react';\nimport { FiCalendar } from '@react-icons/all-files/fi/FiCalendar';\nimport { FiClock } from '@react-icons/all-files/fi/FiClock';\n\nimport { BlogPageQuery_allMarkdownRemark_nodes } from '../../pages/__generated__/BlogPageQuery';\nimport Card, { cardModeRow } from '../shared/Card';\nimport CardContent, { cardContentModeRow } from '../shared/CardContent';\nimport type { Link as LinkType } from '../../types/Link';\nimport CardTitle from '../shared/CardTitle';\nimport FluidImage from '../shared/FluidImage';\nimport CardMedia, { cardMediaModeRow } from '../shared/CardMedia';\nimport Row from '../shared/Row';\nimport { timeToReadMultiplier } from '../../constants/posts';\n\ntype PostPreviewProps = {\n  post: BlogPageQuery_allMarkdownRemark_nodes,\n};\n\nconst PostPreview = (props: PostPreviewProps): React.ReactElement | null => {\n  const { post } = props;\n\n  const postLink: LinkType = {\n    url: post.fields?.slug,\n  };\n\n  const postCover = post.frontmatter?.cover?.childImageSharp?.fluid ? (\n    <FluidImage fluidImage={post.frontmatter?.cover?.childImageSharp?.fluid} />\n  ) : null;\n\n  const postSummary = post?.frontmatter?.summary ? (\n    <div className=\"mb-3 font-light\">\n      {post?.frontmatter?.summary}\n    </div>\n  ) : null;\n\n  const dateElement = post?.frontmatter?.date ? (\n    <Row className=\"mr-6\">\n      <FiCalendar className=\"mr-1\" />\n      {post.frontmatter.date}\n    </Row>\n  ) : null;\n\n  const timeToRead = post?.timeToRead ? (\n    <Row>\n      <FiClock className=\"mr-1\" />\n      {Math.floor(post?.timeToRead * timeToReadMultiplier)} min to read\n    </Row>\n  ) : null;\n\n  return (\n    <Card mode={cardModeRow}>\n      <CardMedia mode={cardMediaModeRow} link={postLink}>\n        {postCover}\n      </CardMedia>\n      <CardContent mode={cardContentModeRow}>\n        <CardTitle link={postLink}>\n          {post?.frontmatter?.title}\n        </CardTitle>\n        {postSummary}\n        <Row className=\"text-xs text-gray-500\">\n          {dateElement}\n          {timeToRead}\n        </Row>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default PostPreview;\n","import React from 'react';\n\nimport Cards, { cardModeList } from '../shared/Cards';\nimport PostPreview from './PostPreview';\nimport { BlogPageQuery, BlogPageQuery_allMarkdownRemark_nodes } from '../../pages/__generated__/BlogPageQuery';\n\ntype PostsListProps = {\n  posts: BlogPageQuery,\n};\n\nconst PostsList = (props: PostsListProps): React.ReactElement => {\n  const { posts } = props;\n\n  const postsElements = posts.allMarkdownRemark.nodes.map(\n    (node: BlogPageQuery_allMarkdownRemark_nodes) => {\n      return <PostPreview post={node} key={node.id} />;\n    },\n  );\n\n  return (\n    <Cards mode={cardModeList}>\n      {postsElements}\n    </Cards>\n  );\n};\n\nexport default PostsList;\n","import React from 'react';\n\nimport PageLayout from '../layouts/PageLayout';\nimport ScreenTitle from '../shared/ScreenTitle';\nimport PostsList from '../elements/PostsList';\nimport { BlogPageQuery } from '../../pages/__generated__/BlogPageQuery';\nimport PageHeader from '../shared/PageHeader';\n\ntype BlogScreenProps = {\n  posts: BlogPageQuery;\n};\n\nconst BlogScreen = (props: BlogScreenProps): React.ReactElement => {\n  const { posts } = props;\n\n  return (\n    <PageLayout>\n      <ScreenTitle title=\"Blog\" />\n      <PageHeader>Blog</PageHeader>\n      <PostsList posts={posts} />\n    </PageLayout>\n  );\n};\n\nexport default BlogScreen;\n","import React from 'react';\nimport { graphql, PageProps } from 'gatsby';\n\nimport BlogScreen from '../components/screens/BlogScreen';\nimport { BlogPageQuery } from './__generated__/BlogPageQuery';\n\ninterface BlogProps extends PageProps {\n  data: BlogPageQuery,\n}\n\nexport const query = graphql`\n  query BlogPageQuery {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      nodes {\n        id\n        timeToRead\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          summary\n          date(formatString: \"MMM D, YYYY\")\n          cover {\n            childImageSharp {\n              fluid(\n                fit: COVER,\n                cropFocus: CENTER,\n                grayscale: false,\n                quality: 90,\n                maxWidth: 1000\n              ) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst Blog = (props: BlogProps): React.ReactElement => {\n  const { data } = props;\n\n  return (\n    <BlogScreen posts={data} />\n  );\n};\n\nexport default Blog;\n","import React from 'react';\n\ntype CardsMode = 'list' | 'grid';\n\nexport const cardModeList: CardsMode = 'list';\nexport const cardModeGrid: CardsMode = 'grid';\n\ntype CardsProps = {\n  children: React.ReactNode,\n  mode?: CardsMode,\n};\n\nconst Cards = (props: CardsProps): React.ReactElement | null => {\n  const { children, mode = cardModeGrid } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const commonClasses = 'grid gap-12 grid-cols-1';\n\n  const classes = mode === cardModeGrid\n    ? `${commonClasses} sm:grid-cols-2 lg:grid-cols-3`\n    : `${commonClasses}`;\n\n  return (\n    <div className={classes}>\n      {children}\n    </div>\n  );\n};\n\nexport default Cards;\n","import React from 'react';\nimport H, { hLevel } from './H';\nimport { Link } from '../../types/Link';\nimport HyperLink from './HyperLink';\n\ntype CardTitleProps = {\n  children: React.ReactNode,\n  link?: Link,\n};\n\nconst CardTitle = (props: CardTitleProps): React.ReactElement | null => {\n  const { children, link } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const headerElement = (\n    <H level={hLevel.h3}>\n      {children}\n    </H>\n  );\n\n  const linkElement = link ? (\n    <HyperLink link={link}>\n      {headerElement}\n    </HyperLink>\n  ) : null;\n\n  return (\n    <div className=\"mb-3\">\n      {linkElement || headerElement}\n    </div>\n  );\n};\n\nexport default CardTitle;\n","import React from 'react';\n\ntype CardMode = 'row' | 'column';\n\nexport const cardModeRow: CardMode = 'row';\nexport const cardModeColumn: CardMode = 'column';\n\ntype CardProps = {\n  children: React.ReactNode,\n  mode?: CardMode,\n};\n\nconst Card = (props: CardProps): React.ReactElement | null => {\n  const { children, mode = cardModeColumn } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const commonCardStyles = 'transition duration-200 ease-in-out shadow-card rounded-md overflow-hidden bg-white flex flex-col';\n\n  const classes = mode === cardModeRow\n    ? `${commonCardStyles} sm:flex-row`\n    : `${commonCardStyles}`;\n\n  return (\n    <div className={classes}>\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon;\n\nmodule.exports.FiCalendar = function FiCalendar(props) {\n  return GenIcon({\n    \"tag\": \"svg\",\n    \"attr\": {\n      \"viewBox\": \"0 0 24 24\",\n      \"fill\": \"none\",\n      \"stroke\": \"currentColor\",\n      \"strokeWidth\": \"2\",\n      \"strokeLinecap\": \"round\",\n      \"strokeLinejoin\": \"round\"\n    },\n    \"child\": [{\n      \"tag\": \"rect\",\n      \"attr\": {\n        \"x\": \"3\",\n        \"y\": \"4\",\n        \"width\": \"18\",\n        \"height\": \"18\",\n        \"rx\": \"2\",\n        \"ry\": \"2\"\n      }\n    }, {\n      \"tag\": \"line\",\n      \"attr\": {\n        \"x1\": \"16\",\n        \"y1\": \"2\",\n        \"x2\": \"16\",\n        \"y2\": \"6\"\n      }\n    }, {\n      \"tag\": \"line\",\n      \"attr\": {\n        \"x1\": \"8\",\n        \"y1\": \"2\",\n        \"x2\": \"8\",\n        \"y2\": \"6\"\n      }\n    }, {\n      \"tag\": \"line\",\n      \"attr\": {\n        \"x1\": \"3\",\n        \"y1\": \"10\",\n        \"x2\": \"21\",\n        \"y2\": \"10\"\n      }\n    }]\n  })(props);\n};","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon;\n\nmodule.exports.FiClock = function FiClock(props) {\n  return GenIcon({\n    \"tag\": \"svg\",\n    \"attr\": {\n      \"viewBox\": \"0 0 24 24\",\n      \"fill\": \"none\",\n      \"stroke\": \"currentColor\",\n      \"strokeWidth\": \"2\",\n      \"strokeLinecap\": \"round\",\n      \"strokeLinejoin\": \"round\"\n    },\n    \"child\": [{\n      \"tag\": \"circle\",\n      \"attr\": {\n        \"cx\": \"12\",\n        \"cy\": \"12\",\n        \"r\": \"10\"\n      }\n    }, {\n      \"tag\": \"polyline\",\n      \"attr\": {\n        \"points\": \"12 6 12 12 16 14\"\n      }\n    }]\n  })(props);\n};","// Adjusting the time to read.\n// gatsby-transformer-remark plugin relies on the 265 average words per minute.\n// @see: https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-transformer-remark/src/utils/time-to-read.js\nexport const timeToReadMultiplier = 0.6;\n","import React from 'react';\n\ntype CardContentMode = 'row' | 'column';\n\nexport const cardContentModeRow: CardContentMode = 'row';\nexport const cardContentModeColumn: CardContentMode = 'column';\n\ntype CardContentProps = {\n  children: React.ReactNode,\n  className?: string,\n  mode?: CardContentMode,\n};\n\nconst CardContent = (props: CardContentProps): React.ReactElement | null => {\n  const { children, className = '', mode = cardContentModeColumn } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const commonClasses = `p-6 ${className}`;\n\n  const classes = mode === cardContentModeRow\n    ? `${commonClasses} sm:w-3/5 lg:w-3/4`\n    : `${commonClasses}`;\n\n  return (\n    <div className={classes} style={{ flex: 1 }}>\n      {children}\n    </div>\n  );\n};\n\nexport default CardContent;\n","import React from 'react';\nimport H, { hLevel } from './H';\n\ntype PageHeaderProps = {\n  children: React.ReactNode,\n  className?: string,\n};\n\nconst PageHeader = (props: PageHeaderProps): React.ReactElement | null => {\n  const { children, className = '' } = props;\n\n  const commonClasses = 'mb-6 uppercase font-extrabold';\n\n  const classes = `${commonClasses} ${className}`;\n\n  return (\n    <H level={hLevel.h1} className={classes}>{children}</H>\n  );\n};\n\nexport default PageHeader;\n"],"sourceRoot":""}