{"version":3,"sources":["webpack:///./src/components/screens/SubscribeScreen.tsx","webpack:///./src/pages/subscribe/index.tsx","webpack:///./src/components/shared/SubscriptionForm.tsx","webpack:///./src/components/shared/PageHeader.tsx"],"names":["SubscribeScreen","PageLayout","SEO","title","description","PageHeader","className","ErrorBoundary","SubscriptionForm","withHeader","Index","props","inputClass","header","action","method","placeholder","type","name","required","aria-hidden","tabIndex","value","children","classes","commonClasses","level","hLevel","h1"],"mappings":"uLA2BeA,EAnBS,WACtB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,MAAM,YACNC,YAAY,mEAEd,kBAACC,EAAA,EAAD,oCACA,yBAAKC,UAAU,4CACb,yBAAKA,UAAU,YACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAkBC,YAAY,SCT3BC,UAND,WACZ,OACE,kBAAC,EAAD,Q,kCCNJ,yBA8DeF,IAxDU,SAACG,GAAqD,MAC/CA,EAAtBF,WAIFG,EAAa,6EAEbC,OAPuE,SAQ3E,wBAAIP,UAAU,sDAAd,+BAGE,KAEJ,OACE,yBAAKA,UAAU,qCACZO,EAED,uBAAGP,UAAU,gBAAb,oDAIA,0BAAMQ,OAlBS,+FAkBWC,OAAO,OAAOT,UAAU,iBAChD,2BACEU,YAAY,aACZC,KAAK,OACLC,KAAK,QACLZ,UAAWM,EACXO,UAAQ,IAGV,2BACEH,YAAY,QACZC,KAAK,QACLC,KAAK,QACLZ,UAAWM,EACXO,UAAQ,IAGV,yBAAKb,UAAU,SAASc,cAAY,QAClC,2BACEH,KAAK,OACLC,KAAK,yCACLG,UAAW,KAIf,2BACEJ,KAAK,SACLK,MAAM,YACNhB,UAAU,6H,oCCvDpB,qCAoBeD,IAZI,SAACM,GAAsD,IAChEY,EAA6BZ,EAA7BY,SADgE,EACnCZ,EAAnBL,UAIZkB,EAAaC,uCALqD,MAC1C,GAD0C,GAOxE,OACE,kBAAC,IAAD,CAAGC,MAAOC,IAAOC,GAAItB,UAAWkB,GAAUD","file":"component---src-pages-subscribe-index-tsx-90af2a0e715d7f66c5f7.js","sourcesContent":["import React from 'react';\n\nimport PageLayout from '../layouts/PageLayout';\nimport SEO from '../shared/SEO';\nimport SubscriptionForm from '../shared/SubscriptionForm';\nimport ErrorBoundary from '../shared/ErrorBoundary';\nimport PageHeader from '../shared/PageHeader';\n\nconst SubscribeScreen = (): React.ReactElement => {\n  return (\n    <PageLayout>\n      <SEO\n        title=\"Subscribe\"\n        description=\"Subscribe to get my latest posts and projects updates by email\"\n      />\n      <PageHeader>Subscribe to the newsletter</PageHeader>\n      <div className=\"flex flex-row justify-start items-center\">\n        <div className=\"max-w-md\">\n          <ErrorBoundary>\n            <SubscriptionForm withHeader={false} />\n          </ErrorBoundary>\n        </div>\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default SubscribeScreen;\n","import React from 'react';\n\nimport SubscribeScreen from '../../components/screens/SubscribeScreen';\n\nconst Index = (): React.ReactElement => {\n  return (\n    <SubscribeScreen />\n  );\n};\n\nexport default Index;\n","import React from 'react';\n\ntype SubscriptionFormProps = {\n  withHeader?: boolean,\n};\n\nconst SubscriptionForm = (props: SubscriptionFormProps): React.ReactElement => {\n  const { withHeader = true } = props;\n\n  const formAction = 'https://dev.us1.list-manage.com/subscribe/post?u=7714f14ff32085c685da2cfaa&amp;id=53ffa81463';\n\n  const inputClass = 'border py-2 px-3 mb-3 rounded border-gray-300 border-solid appearance-none';\n\n  const header = withHeader ? (\n    <h1 className=\"text-grey-darkest uppercase font-bold text-xl mb-3\">\n      Subscribe to the Newsletter\n    </h1>\n  ) : null;\n\n  return (\n    <div className=\"bg-white rounded-md shadow-md p-8\">\n      {header}\n\n      <p className=\"text-sm mb-3\">\n        Get my latest posts and project updates by email\n      </p>\n\n      <form action={formAction} method=\"post\" className=\"flex flex-col\">\n        <input\n          placeholder=\"First Name\"\n          type=\"text\"\n          name=\"FNAME\"\n          className={inputClass}\n          required\n        />\n\n        <input\n          placeholder=\"Email\"\n          type=\"email\"\n          name=\"EMAIL\"\n          className={inputClass}\n          required\n        />\n\n        <div className=\"hidden\" aria-hidden=\"true\">\n          <input\n            type=\"text\"\n            name=\"b_7714f14ff32085c685da2cfaa_53ffa81463\"\n            tabIndex={-1}\n          />\n        </div>\n\n        <input\n          type=\"submit\"\n          value=\"Subscribe\"\n          className=\"transition duration-200 ease-in-out bg-black text-white py-2 px-3 rounded shadow-sm cursor-pointer hover:bg-gray-800\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default SubscriptionForm;\n","import React from 'react';\nimport H, { hLevel } from './H';\n\ntype PageHeaderProps = {\n  children: React.ReactNode,\n  className?: string,\n};\n\nconst PageHeader = (props: PageHeaderProps): React.ReactElement | null => {\n  const { children, className = '' } = props;\n\n  const commonClasses = 'mb-6 uppercase font-extrabold';\n\n  const classes = `${commonClasses} ${className}`;\n\n  return (\n    <H level={hLevel.h1} className={classes}>{children}</H>\n  );\n};\n\nexport default PageHeader;\n"],"sourceRoot":""}