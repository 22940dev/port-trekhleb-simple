{"version":3,"sources":["webpack:///./node_modules/@react-icons/all-files/fi/FiCalendar.js","webpack:///./node_modules/@react-icons/all-files/fi/FiClock.js","webpack:///./src/utils/time.ts","webpack:///./src/components/elements/Post.tsx","webpack:///./src/components/screens/PostScreen.tsx","webpack:///./src/templates/Post.tsx","webpack:///./src/components/shared/PageHeader.tsx"],"names":["GenIcon","module","exports","FiCalendar","props","FiClock","timeToReadFromRemark","remarkTimeToRead","Math","ceil","Post","post","dateElement","markdownRemark","frontmatter","date","Row","className","timeToRead","blogPostColor","style","maxWidth","PageHeader","title","dangerouslySetInnerHTML","__html","html","PostScreen","PageLayout","SEO","titleMode","titleModeSuffix","description","summary","image","cover","childImageSharp","fluid","src","type","ogTypeArticle","BlogPost","data","children","classes","commonClasses","level","hLevel","h1"],"mappings":"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","file":"component---src-templates-post-tsx-d45fd4dd65e09ccffc08.js","sourcesContent":["// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon;\n\nmodule.exports.FiCalendar = function FiCalendar(props) {\n  return GenIcon({\n    \"tag\": \"svg\",\n    \"attr\": {\n      \"viewBox\": \"0 0 24 24\",\n      \"fill\": \"none\",\n      \"stroke\": \"currentColor\",\n      \"strokeWidth\": \"2\",\n      \"strokeLinecap\": \"round\",\n      \"strokeLinejoin\": \"round\"\n    },\n    \"child\": [{\n      \"tag\": \"rect\",\n      \"attr\": {\n        \"x\": \"3\",\n        \"y\": \"4\",\n        \"width\": \"18\",\n        \"height\": \"18\",\n        \"rx\": \"2\",\n        \"ry\": \"2\"\n      }\n    }, {\n      \"tag\": \"line\",\n      \"attr\": {\n        \"x1\": \"16\",\n        \"y1\": \"2\",\n        \"x2\": \"16\",\n        \"y2\": \"6\"\n      }\n    }, {\n      \"tag\": \"line\",\n      \"attr\": {\n        \"x1\": \"8\",\n        \"y1\": \"2\",\n        \"x2\": \"8\",\n        \"y2\": \"6\"\n      }\n    }, {\n      \"tag\": \"line\",\n      \"attr\": {\n        \"x1\": \"3\",\n        \"y1\": \"10\",\n        \"x2\": \"21\",\n        \"y2\": \"10\"\n      }\n    }]\n  })(props);\n};","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon;\n\nmodule.exports.FiClock = function FiClock(props) {\n  return GenIcon({\n    \"tag\": \"svg\",\n    \"attr\": {\n      \"viewBox\": \"0 0 24 24\",\n      \"fill\": \"none\",\n      \"stroke\": \"currentColor\",\n      \"strokeWidth\": \"2\",\n      \"strokeLinecap\": \"round\",\n      \"strokeLinejoin\": \"round\"\n    },\n    \"child\": [{\n      \"tag\": \"circle\",\n      \"attr\": {\n        \"cx\": \"12\",\n        \"cy\": \"12\",\n        \"r\": \"10\"\n      }\n    }, {\n      \"tag\": \"polyline\",\n      \"attr\": {\n        \"points\": \"12 6 12 12 16 14\"\n      }\n    }]\n  })(props);\n};","// Adjusting the time to read.\n// gatsby-transformer-remark plugin relies on the 265 average words per minute.\n// @see: https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-transformer-remark/src/utils/time-to-read.js\nexport const timeToReadFromRemark = (\n  remarkTimeToRead?: number | null | undefined,\n): number | null => {\n  if (typeof remarkTimeToRead !== 'number') {\n    return null;\n  }\n  const timeToReadMultiplier = 1;\n  const minTimeToRead = 1;\n  return Math.ceil(remarkTimeToRead * timeToReadMultiplier) || minTimeToRead;\n};\n","import React from 'react';\nimport { FiCalendar } from '@react-icons/all-files/fi/FiCalendar';\nimport { FiClock } from '@react-icons/all-files/fi/FiClock';\n\nimport { PostTemplateQuery } from '../../templates/__generated__/PostTemplateQuery';\nimport { blogPostColor } from '../../constants/style';\nimport PageHeader from '../shared/PageHeader';\nimport Row from '../shared/Row';\nimport { timeToReadFromRemark } from '../../utils/time';\n\ntype PostProps = {\n  post: PostTemplateQuery,\n};\n\nconst Post = (props: PostProps): React.ReactElement | null => {\n  const { post } = props;\n\n  const dateElement = post?.markdownRemark?.frontmatter?.date ? (\n    <Row className=\"mr-6\">\n      <FiCalendar className=\"mr-1\" />\n      {post?.markdownRemark?.frontmatter.date}\n    </Row>\n  ) : null;\n\n  const timeToRead = post?.markdownRemark?.timeToRead ? (\n    <Row>\n      <FiClock className=\"mr-1\" />\n      {timeToReadFromRemark(post?.markdownRemark?.timeToRead)} min to read\n    </Row>\n  ) : null;\n\n  // To style the blog post the tailwindcss-typography plugin is used.\n  // @see: https://github.com/tailwindlabs/tailwindcss-typography\n  return (\n    <div className=\"flex flex-col items-center\">\n      <article className={`w-full prose prose-sm sm:prose overflow-hidden ${blogPostColor}`} style={{ maxWidth: '860px' }}>\n        <PageHeader>{post.markdownRemark?.frontmatter?.title || ''}</PageHeader>\n        <Row>\n          {dateElement}\n          {timeToRead}\n        </Row>\n        <div dangerouslySetInnerHTML={{ __html: post.markdownRemark?.html || '' }} />\n      </article>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from 'react';\n\nimport PageLayout from '../layouts/PageLayout';\nimport { PostTemplateQuery } from '../../templates/__generated__/PostTemplateQuery';\nimport Post from '../elements/Post';\nimport SEO, { ogTypeArticle, titleModeSuffix } from '../shared/SEO';\n\ntype PostScreenProps = {\n  post: PostTemplateQuery;\n};\n\nconst PostScreen = (props: PostScreenProps): React.ReactElement => {\n  const { post } = props;\n\n  return (\n    <PageLayout>\n      <SEO\n        title={post.markdownRemark?.frontmatter?.title || ''}\n        titleMode={titleModeSuffix}\n        description={post.markdownRemark?.frontmatter?.summary || ''}\n        image={post.markdownRemark?.frontmatter?.cover?.childImageSharp?.fluid?.src || ''}\n        type={ogTypeArticle}\n      />\n      <Post post={post} />\n    </PageLayout>\n  );\n};\n\nexport default PostScreen;\n","import * as React from 'react';\nimport { graphql, PageProps } from 'gatsby';\nimport { PostTemplateQuery } from './__generated__/PostTemplateQuery';\nimport PostScreen from '../components/screens/PostScreen';\n\ninterface BlogPostProps extends PageProps {\n  data: PostTemplateQuery,\n}\n\nexport const query = graphql`\n  query PostTemplateQuery ($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      timeToRead\n      html\n      excerpt(pruneLength: 300, format: PLAIN)\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        summary\n        date(formatString: \"DD MMMM, YYYY\")\n        cover {\n          childImageSharp {\n            fluid(\n              fit: COVER,\n              cropFocus: CENTER,\n              grayscale: false,\n              quality: 90,\n              maxWidth: 1000\n            ) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst BlogPost = (props: BlogPostProps): React.ReactElement => {\n  const { data } = props;\n  return (\n    <PostScreen post={data} />\n  );\n};\n\nexport default BlogPost;\n","import React from 'react';\nimport H, { hLevel } from './H';\n\ntype PageHeaderProps = {\n  children: React.ReactNode,\n  className?: string,\n};\n\nconst PageHeader = (props: PageHeaderProps): React.ReactElement | null => {\n  const { children, className = '' } = props;\n\n  const commonClasses = 'mb-6 uppercase font-extrabold';\n\n  const classes = `${commonClasses} ${className}`;\n\n  return (\n    <H level={hLevel.h1} className={classes}>{children}</H>\n  );\n};\n\nexport default PageHeader;\n"],"sourceRoot":""}