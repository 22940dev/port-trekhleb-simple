{"version":3,"sources":["webpack://trekhleb.github.io/./node_modules/@react-icons/all-files/bi/BiLink.js","webpack://trekhleb.github.io/./src/components/elements/ProjectAchievement.tsx","webpack://trekhleb.github.io/./src/components/elements/ProjectAchievements.tsx","webpack://trekhleb.github.io/./src/components/elements/Project.tsx","webpack://trekhleb.github.io/./src/components/screens/ProjectScreen.tsx","webpack://trekhleb.github.io/./src/templates/Project.tsx"],"names":["GenIcon","module","exports","props","achievement","fluidImageFetched","useFluidCover","imagePath","image","srcPath","date","className","DateRange","startDate","imageLink","url","src","detailsLink","link","HyperLink","startEnhancer","BiLink","size","caption","Card","key","title","CardMedia","FluidImage","fluidImage","CardContent","achievements","length","achievementsItems","map","Row","H","level","hLevel","id","Badge","Cards","project","projectTags","tags","Tags","numToShow","projectDates","endDate","projectStars","getGitHubProjectStars","projectStarsLink","srcURL","stars","Stars","projectSummaryLines","summary","summaryLine","index","projectSummary","defaultProjectUrl","archived","undefined","demoURL","demoLink","ButtonLink","IoPlay","sourceCodeLink","FaGithub","projectCover","cover","projectCoverCard","archivedStamp","Archived","actions","extraLinksList","links","extraLink","linkIndex","BiInfoCircle","externalLinks","projectDatesAndStars","projectAchievements","PageLayout","SEO","name","description","PageHeader","Alert","type","ErrorAlert","pageContext","projectID","projects"],"mappings":"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","file":"component---src-templates-project-tsx-6970c792f9f8ac959c83.js","sourcesContent":["// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon;\n\nmodule.exports.BiLink = function BiLink(props) {\n  return GenIcon({\n    \"tag\": \"svg\",\n    \"attr\": {\n      \"viewBox\": \"0 0 24 24\"\n    },\n    \"child\": [{\n      \"tag\": \"path\",\n      \"attr\": {\n        \"d\": \"M8.465,11.293c1.133-1.133,3.109-1.133,4.242,0L13.414,12l1.414-1.414l-0.707-0.707c-0.943-0.944-2.199-1.465-3.535-1.465 S7.994,8.935,7.051,9.879L4.929,12c-1.948,1.949-1.948,5.122,0,7.071c0.975,0.975,2.255,1.462,3.535,1.462 c1.281,0,2.562-0.487,3.536-1.462l0.707-0.707l-1.414-1.414l-0.707,0.707c-1.17,1.167-3.073,1.169-4.243,0 c-1.169-1.17-1.169-3.073,0-4.243L8.465,11.293z\"\n      }\n    }, {\n      \"tag\": \"path\",\n      \"attr\": {\n        \"d\": \"M12,4.929l-0.707,0.707l1.414,1.414l0.707-0.707c1.169-1.167,3.072-1.169,4.243,0c1.169,1.17,1.169,3.073,0,4.243 l-2.122,2.121c-1.133,1.133-3.109,1.133-4.242,0L10.586,12l-1.414,1.414l0.707,0.707c0.943,0.944,2.199,1.465,3.535,1.465 s2.592-0.521,3.535-1.465L19.071,12c1.948-1.949,1.948-5.122,0-7.071C17.121,2.979,13.948,2.98,12,4.929z\"\n      }\n    }]\n  })(props);\n};","import React from 'react';\nimport { BiLink } from '@react-icons/all-files/bi/BiLink';\n\nimport { Achievement } from '../../types/Achievement';\nimport Card from '../shared/Card';\nimport CardMedia from '../shared/CardMedia';\nimport { useFluidCover } from '../../hooks/useFluidCover';\nimport FluidImage from '../shared/FluidImage';\nimport CardContent from '../shared/CardContent';\nimport HyperLink from '../shared/HyperLink';\nimport { Link } from '../../types/Link';\nimport DateRange from '../shared/DateRange';\n\ntype ProjectAchievementsProps = {\n  achievement: Achievement | null | undefined,\n};\n\nconst ProjectAchievement = (props: ProjectAchievementsProps): React.ReactElement | null => {\n  const { achievement } = props;\n\n  const fluidImageFetched = useFluidCover({ imagePath: achievement?.image?.srcPath });\n\n  if (!achievement) {\n    return null;\n  }\n\n  const date = achievement?.date ? (\n    <div className=\"mt-3\">\n      <DateRange\n        startDate={achievement.date}\n        className=\"text-xs text-gray-500\"\n      />\n    </div>\n  ) : null;\n\n  const imageLink: Link = {\n    url: fluidImageFetched?.src,\n  };\n\n  const detailsLink = achievement.link ? (\n    <div className=\"mt-3\">\n      <HyperLink\n        link={achievement.link}\n        className=\"text-sm underline\"\n        startEnhancer={(<BiLink size={16} />)}\n      >\n        {achievement.link?.caption || 'Details'}\n      </HyperLink>\n    </div>\n  ) : null;\n\n  return (\n    <Card key={achievement.title}>\n      <CardMedia link={imageLink}>\n        <FluidImage fluidImage={fluidImageFetched} />\n      </CardMedia>\n      <CardContent>\n        <HyperLink link={imageLink}>\n          {achievement.title}\n        </HyperLink>\n        {date}\n        {detailsLink}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ProjectAchievement;\n","import React from 'react';\n\nimport { Achievement } from '../../types/Achievement';\nimport H, { hLevel } from '../shared/H';\nimport Row from '../shared/Row';\nimport Badge from '../shared/Badge';\nimport Cards from '../shared/Cards';\nimport ProjectAchievement from './ProjectAchievement';\n\ntype ProjectAchievementsProps = {\n  achievements: Achievement[] | null | undefined,\n};\n\nconst ProjectAchievements = (props: ProjectAchievementsProps): React.ReactElement | null => {\n  const { achievements } = props;\n\n  if (!achievements || !achievements.length) {\n    return null;\n  }\n\n  const achievementsItems = achievements.map((achievement: Achievement) => {\n    return (\n      <ProjectAchievement\n        achievement={achievement}\n        key={achievement.title}\n      />\n    );\n  });\n\n  return (\n    <div className=\"mt-6 mb-6\">\n      <Row className=\"mb-3\">\n        <H level={hLevel.h2} id=\"achievements\">\n          Achievements\n        </H>\n        <Badge className=\"ml-3 self-start\">\n          {achievements.length}\n        </Badge>\n      </Row>\n      <Cards>\n        {achievementsItems}\n      </Cards>\n    </div>\n  );\n};\n\nexport default ProjectAchievements;\n","import React from 'react';\nimport { IoPlay } from '@react-icons/all-files/io5/IoPlay';\nimport { FaGithub } from '@react-icons/all-files/fa/FaGithub';\nimport { BiInfoCircle } from '@react-icons/all-files/bi/BiInfoCircle';\n\nimport { Project as ProjectType } from '../../types/Project';\nimport DateRange from '../shared/DateRange';\nimport Card from '../shared/Card';\nimport CardMedia from '../shared/CardMedia';\nimport Tags from '../shared/Tags';\nimport FluidImage from '../shared/FluidImage';\nimport ButtonLink from '../shared/ButtonLink';\nimport Archived from '../shared/Archived';\nimport Stars from '../shared/Stars';\nimport Row from '../shared/Row';\nimport { getGitHubProjectStars } from '../../utils/project';\nimport { Link } from '../../types/Link';\nimport HyperLink from '../shared/HyperLink';\nimport ProjectAchievements from './ProjectAchievements';\n\ntype ProjectProps = {\n  project: ProjectType | null,\n};\n\nconst tagsPerProject = 5;\n\nconst Project = (props: ProjectProps): React.ReactElement | null => {\n  const { project } = props;\n\n  if (!project) {\n    return null;\n  }\n\n  const projectTags = project?.tags ? (\n    <div>\n      <Tags tags={project.tags} numToShow={tagsPerProject} />\n    </div>\n  ) : null;\n\n  const projectDates = (\n    <DateRange\n      startDate={project.startDate}\n      endDate={project.endDate}\n      className=\"text-xs text-gray-500\"\n    />\n  );\n\n  const projectStars = getGitHubProjectStars(project);\n  const projectStarsLink: Link = {\n    url: project?.srcURL?.url,\n    caption: 'Stars on GitHub',\n  };\n  const stars = typeof projectStars === 'number' ? (\n    <Stars\n      stars={projectStars}\n      link={projectStarsLink}\n      className=\"text-xs text-gray-500 font-light\"\n    />\n  ) : null;\n\n  /* eslint-disable react/no-array-index-key */\n  const projectSummaryLines = project.summary ? project.summary.map(\n    (summaryLine: string | null, index: number) => (\n      <p key={index}>\n        {summaryLine}\n      </p>\n    ),\n  ) : null;\n\n  const projectSummary = projectSummaryLines ? (\n    <div className=\"mb-3 font-light\">\n      {projectSummaryLines}\n    </div>\n  ) : null;\n\n  const defaultProjectUrl = project.archived ? undefined : project.demoURL || project.srcURL;\n\n  const demoLink = project.demoURL && !project.archived ? (\n    <ButtonLink\n      link={project.demoURL}\n      startEnhancer={<IoPlay />}\n      className=\"mr-4\"\n    >\n      Demo\n    </ButtonLink>\n  ) : null;\n\n  const sourceCodeLink = project.srcURL && !project.archived ? (\n    <ButtonLink\n      link={project.srcURL}\n      startEnhancer={<FaGithub />}\n    >\n      Source Code\n    </ButtonLink>\n  ) : null;\n\n  const projectCover = project.cover ? (\n    <FluidImage image={project.cover} />\n  ) : null;\n\n  const projectCoverCard = (\n    <div className=\"mb-6\">\n      <Card>\n        <CardMedia link={defaultProjectUrl} className=\"h-96\">\n          {projectCover}\n        </CardMedia>\n      </Card>\n    </div>\n  );\n\n  const archivedStamp = project?.archived ? (\n    <Row className=\"py-6\">\n      <Archived />\n    </Row>\n  ) : null;\n\n  const actions = demoLink || sourceCodeLink ? (\n    <Row className=\"py-6\">\n      {demoLink}\n      {sourceCodeLink}\n    </Row>\n  ) : null;\n\n  const extraLinksList = project?.links && project?.links.length\n    ? project?.links.map((extraLink: Link, linkIndex) => {\n      return (\n        <li key={linkIndex}>\n          <HyperLink\n            link={extraLink}\n            className=\"text-sm underline\"\n            startEnhancer={(<BiInfoCircle size={14} />)}\n          >\n            {extraLink?.caption || 'Read more'}\n          </HyperLink>\n        </li>\n      );\n    })\n    : null;\n\n  const externalLinks = extraLinksList ? (\n    <ul className=\"mt-3\">\n      {extraLinksList}\n    </ul>\n  ) : null;\n\n  const projectDatesAndStars = (\n    <Row className=\"mb-3 justify-between\">\n      <div>\n        {projectDates}\n      </div>\n      <div>\n        {stars}\n      </div>\n    </Row>\n  );\n\n  const projectAchievements = (\n    <ProjectAchievements\n      achievements={project?.achievements}\n    />\n  );\n\n  return (\n    <>\n      {projectCoverCard}\n      {projectDatesAndStars}\n      {projectSummary}\n      {projectTags}\n      {externalLinks}\n      {actions}\n      {archivedStamp}\n      {projectAchievements}\n    </>\n  );\n};\n\nexport default Project;\n","import React from 'react';\n\nimport { Project as ProjectType } from '../../types/Project';\nimport PageLayout from '../layouts/PageLayout';\nimport PageHeader from '../shared/PageHeader';\nimport SEO from '../shared/SEO';\nimport Alert, { ErrorAlert } from '../shared/Alert';\nimport Project from '../elements/Project';\nimport Row from '../shared/Row';\nimport Badge from '../shared/Badge';\n\ntype ProjectScreenProps = {\n  project: ProjectType | null,\n};\n\nconst ProjectScreen = (props: ProjectScreenProps): React.ReactElement => {\n  const { project } = props;\n\n  if (!project) {\n    return (\n      <Alert type={ErrorAlert}>\n        Project not found\n      </Alert>\n    );\n  }\n\n  return (\n    <PageLayout>\n      <SEO\n        title={project?.name || ''}\n        description={project?.summary && project?.summary.length ? project.summary[0] : ''}\n      />\n      <Row>\n        <PageHeader>{project.name}</PageHeader>\n        <Badge className=\"ml-3 self-start\">project</Badge>\n      </Row>\n      <Project project={project} />\n    </PageLayout>\n  );\n};\n\nexport default ProjectScreen;\n","import * as React from 'react';\nimport { PageProps } from 'gatsby';\nimport ProjectScreen from '../components/screens/ProjectScreen';\nimport { projects } from '../data/projects';\nimport { ProjectID, Project as ProjectType } from '../types/Project';\n\ninterface ProjectProps extends PageProps {\n  pageContext: {\n    projectID: ProjectID,\n  },\n}\n\nconst Project = (props: ProjectProps): React.ReactElement => {\n  const { pageContext } = props;\n  const { projectID = null } = pageContext;\n\n  const project: ProjectType | null = projectID && (projectID in projects)\n    ? projects[projectID]\n    : null;\n\n  return (\n    <ProjectScreen project={project} />\n  );\n};\n\nexport default Project;\n"],"sourceRoot":""}